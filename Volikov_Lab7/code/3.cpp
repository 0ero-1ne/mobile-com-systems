#include <iostream>
#include <stdlib.h>
#include <cmath>
using namespace std;

#define PI 3.14159265 

int main()
{
	const int n = 15;//Кол-во станций

	int a[n][n] =  //Матрица
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	};

	double D = 18.2; //координационное расстояние

	double radius = 3.5; //Радиус зон покрытия

	double R0 = radius*(sqrt(3.0)); //радиус зоны обслуживания

	//расстояние до станций
	double p12 = R0;
	double p13 = R0;
	double p14 = R0;
	double p15 = R0;
	double p16 = R0;
	double p17 = R0;
	double p18 = (R0 / (sqrt(3.0))) * 3;
	double p19 = R0 * 2;
	double p110 = (R0 / (sqrt(3.0))) * 3;
	double p111 = R0 * 2;
	double p112 = (R0 / (sqrt(3.0))) * 3;
	double p113 = R0 * 2;
	double p114 = (R0 / (sqrt(3.0))) * 3;
	double p115 = R0 * 2;
	// *
	double p23 = R0;
	double p24 = (R0 / (sqrt(3.0))) * 3;
	double p25 = R0 * 2;
	double p26 = (R0 / (sqrt(3.0))) * 3;
	double p27 = R0;
	double p28 = R0;
	double p29 = R0;
	double p210 = R0;
	double p211 = (R0 / (sqrt(3.0))) * 3;
	double p212 = R0 * 2;
	double p213 = R0 * (sqrt(7.0));
	double p214 = R0 * (sqrt(7.0));
	double p215 = R0 * 3;
	//*
	double p34 = R0;
	double p35 = (R0 / (sqrt(3.0))) * 3;
	double p36 = R0 * 2;
	double p37 = (R0 / (sqrt(3.0))) * 3;
	double p38 = R0;
	double p39 = (R0 / (sqrt(3.0))) * 3;
	double p310 = R0 * 2;
	double p311 = R0 * (sqrt(7.0));
	double p312 = R0 * (sqrt(7.0));
	double p313 = R0 * 3;
		// �� �. ���������
	double p314 = R0 * (sqrt(7.0));
	double p315 = R0 * (sqrt(7.0));
	// *
	double p45 = R0;
	double p46 = (R0 / (sqrt(3.0))) * 3;
	double p47 = R0 * 2;
	double p48 = R0 * 2;
	double p49 = R0 * (sqrt(7.0));
	double p410 = R0 * (sqrt(7.0));
	double p411 = R0 * 3;
	double p412 = R0 * (sqrt(7.0));
	double p413 = R0 * (sqrt(7.0));
	double p414 = R0 * 2;
	double p415 = (R0 / (sqrt(3.0))) * 3;
	//  *
	double p56 = R0;
	double p57 = (R0 / (sqrt(3.0))) * 3;
	double p58 = R0 * (sqrt(7.0));
	double p59 = R0 * 3;
	double p510 = R0 * (sqrt(7.0));
	double p511 = R0 * (sqrt(7.0));
	double p512 = R0 * 2;
	double p513 = (R0 / (sqrt(3.0))) * 3;
	double p514 = R0;
	double p515 = R0;
	// *
	double p67 = R0;
	double p68 = R0 * (sqrt(7.0));
	double p69 = R0 * (sqrt(7.0));
	double p610 = R0 * 2;
	double p611 = (R0 / (sqrt(3.0))) * 3;
	double p612 = R0;
	double p613 = R0;
	double p614 = R0;
	double p615 = (R0 / (sqrt(3.0))) * 3;
	// *
	double p78 = R0 * 2;
	double p79 = (R0 / (sqrt(3.0))) * 3;
	double p710 = R0;
	double p711 = R0;
	double p712 = R0;
	double p713 = (R0 / (sqrt(3.0))) * 3;
	double p714 = R0 * 2;
	double p715 = R0 * (sqrt(7.0));
	// *
	double p89 = R0;
	double p810 = (R0 / (sqrt(3.0))) * 3;
	double p811 = R0 * (sqrt(7.0));
	double p812 = R0 * 3; 
	double p814 = ((R0 / (sqrt(3.0))) * 3) * 2;
	double p813 = sqrt(pow(p814, 2) + pow(R0, 2));
	double p815 = sqrt(pow(p814, 2) + pow(R0, 2));
	// *
	double p910 = R0;
	double p911 = R0 * 2;
	double p912 = R0 * (sqrt(7.0));
	double p913 = ((R0 / (sqrt(3.0))) * 3) * 2;
	double p914 = sqrt(pow(R0 * 4, 2) + pow(R0, 2) - 2 * R0 * 4 * cos(60 * PI / 180));
	double p915 = R0 * 4;
	// *
	double p1011 = R0;
	double p1012 = (R0 / (sqrt(3.0))) * 3;
	double p1013 = R0 * (sqrt(7.0));
	double p1014 = R0 * 3;
	double p1015 = sqrt(pow(R0 * 3, 2) + pow(R0, 2) - 2 * R0 * 3 * R0 * cos(120 * PI / 180));
	// *
	double p1112 = R0;
	double p1113 = R0 * 2;
	double p1114 = R0 * (sqrt(7.0));
	double p1115 = sqrt(pow(R0 * 2, 2) + pow(R0 * 2, 2) - 2 * R0 * 4 * R0 * cos(120 * PI / 180));
	//
	double p1213 = R0;
	double p1214 = (R0 / (sqrt(3.0))) * 3;
	double p1215 = R0 * (sqrt(7.0));
	//
	double p1314 = R0;
	double p1315 = R0 * 2;
	//
	double p1415 = R0;
	//

	if (p12 < D) {
		a[0][1] = 1;
		a[1][0] = 1;
	}

	if (p13 < D) {
		a[0][2] = 1;
		a[2][0] = 1;
	}

	if (p14 < D) {
		a[0][3] = 1;
		a[3][0] = 1;
	}

	if (p15 < D) {
		a[0][4] = 1;
		a[4][0] = 1;
	}

	if (p16 < D) {
		a[0][5] = 1;
		a[5][0] = 1;
	}

	if (p17 < D) {
		a[0][6] = 1;
		a[6][0] = 1;
	}

	if (p18 < D) {
		a[0][7] = 1;
		a[7][0] = 1;
	}

	if (p19 < D) {
		a[0][8] = 1;
		a[8][0] = 1;
	}

	if (p110 < D) {
		a[0][9] = 1;
		a[9][0] = 1;
	}

	if (p111 < D) {
		a[0][10] = 1;
		a[10][0] = 1;
	}

	if (p112 < D) {
		a[0][11] = 1;
		a[11][0] = 1;
	}

	if (p113 < D) {
		a[0][12] = 1;
		a[12][0] = 1;
	}

	if (p114 < D) {
		a[0][13] = 1;
		a[13][0] = 1;
	}

	if (p115 < D) {
		a[0][14] = 1;
		a[14][0] = 1;
	}

	//

	if (p23 < D) {
		a[1][2] = 1;
		a[2][1] = 1;
	}

	if (p24 < D) {
		a[1][3] = 1;
		a[3][1] = 1;
	}

	if (p25 < D) {
		a[1][4] = 1;
		a[4][1] = 1;
	}

	if (p26 < D) {
		a[1][5] = 1;
		a[5][1] = 1;
	}

	if (p27 < D) {
		a[1][6] = 1;
		a[6][1] = 1;
	}

	if (p28 < D) {
		a[1][7] = 1;
		a[7][1] = 1;
	}

	if (p29 < D) {
		a[1][8] = 1;
		a[8][1] = 1;
	}

	if (p210 < D) {
		a[1][9] = 1;
		a[9][1] = 1;
	}

	if (p211 < D) {
		a[1][10] = 1;
		a[10][1] = 1;
	}

	if (p212 < D) {
		a[1][11] = 1;
		a[11][1] = 1;
	}

	if (p213 < D) {
		a[1][12] = 1;
		a[12][1] = 1;
	}

	if (p214 < D) {
		a[1][13] = 1;
		a[13][1] = 1;
	}

	if (p215 < D) {
		a[1][14] = 1;
		a[14][1] = 1;
	}

	//


	if (p34 < D) {
		a[2][3] = 1;
		a[3][2] = 1;
	}

	if (p35 < D) {
		a[2][4] = 1;
		a[4][2] = 1;
	}

	if (p36 < D) {
		a[2][5] = 1;
		a[5][2] = 1;
	}

	if (p37 < D) {
		a[2][6] = 1;
		a[6][2] = 1;
	}

	if (p38 < D) {
		a[2][7] = 1;
		a[7][2] = 1;
	}

	if (p39 < D) {
		a[2][8] = 1;
		a[8][2] = 1;
	}

	if (p310 < D) {
		a[2][9] = 1;
		a[9][2] = 1;
	}

	if (p311 < D) {
		a[2][10] = 1;
		a[10][2] = 1;
	}

	if (p312 < D) {
		a[2][11] = 1;
		a[11][2] = 1;
	}

	if (p313 < D) {
		a[2][12] = 1;
		a[12][2] = 1;
	}

	if (p314 < D) {
		a[2][13] = 1;
		a[13][2] = 1;
	}

	if (p315 < D) {
		a[2][14] = 1;
		a[14][2] = 1;
	}

	//

	if (p45 < D) {
		a[3][4] = 1;
		a[4][3] = 1;
	}

	if (p46 < D) {
		a[3][5] = 1;
		a[5][3] = 1;
	}

	if (p47 < D) {
		a[3][6] = 1;
		a[6][3] = 1;
	}

	if (p48 < D) {
		a[3][7] = 1;
		a[7][3] = 1;
	}

	if (p49 < D) {
		a[3][8] = 1;
		a[8][3] = 1;
	}

	if (p410 < D) {
		a[3][9] = 1;
		a[9][3] = 1;
	}

	if (p411 < D) {
		a[3][10] = 1;
		a[10][3] = 1;
	}

	if (p412 < D) {
		a[3][11] = 1;
		a[11][3] = 1;
	}

	if (p413 < D) {
		a[3][12] = 1;
		a[12][3] = 1;
	}

	if (p414 < D) {
		a[3][13] = 1;
		a[13][3] = 1;
	}

	if (p415 < D) {
		a[3][14] = 1;
		a[14][3] = 1;
	}

	//

	if (p56 < D) {
		a[4][5] = 1;
		a[5][4] = 1;
	}

	if (p57 < D) {
		a[4][6] = 1;
		a[6][4] = 1;
	}

	if (p58 < D) {
		a[4][7] = 1;
		a[7][4] = 1;
	}

	if (p59 < D) {
		a[4][8] = 1;
		a[8][4] = 1;
	}

	if (p510 < D) {
		a[4][9] = 1;
		a[9][4] = 1;
	}

	if (p511 < D) {
		a[4][10] = 1;
		a[10][4] = 1;
	}

	if (p512 < D) {
		a[4][11] = 1;
		a[11][4] = 1;
	}

	if (p513 < D) {
		a[4][12] = 1;
		a[12][4] = 1;
	}

	if (p514 < D) {
		a[4][13] = 1;
		a[13][4] = 1;
	}

	if (p515 < D) {
		a[4][14] = 1;
		a[14][4] = 1;
	}

	//

	if (p67 < D) {
		a[5][6] = 1;
		a[6][5] = 1;
	}

	if (p68 < D) {
		a[5][7] = 1;
		a[7][5] = 1;
	}

	if (p69 < D) {
		a[5][8] = 1;
		a[8][5] = 1;
	}

	if (p610 < D) {
		a[5][9] = 1;
		a[9][5] = 1;
	}

	if (p611 < D) {
		a[5][10] = 1;
		a[10][5] = 1;
	}

	if (p612 < D) {
		a[5][11] = 1;
		a[11][5] = 1;
	}

	if (p613 < D) {
		a[5][12] = 1;
		a[12][5] = 1;
	}

	if (p614 < D) {
		a[5][13] = 1;
		a[13][5] = 1;
	}

	if (p615 < D) {
		a[5][14] = 1;
		a[14][5] = 1;
	}

	//

	if (p78 < D) {
		a[6][7] = 1;
		a[7][6] = 1;
	}

	if (p79 < D) {
		a[6][8] = 1;
		a[8][6] = 1;
	}

	if (p710 < D) {
		a[6][9] = 1;
		a[9][6] = 1;
	}

	if (p711 < D) {
		a[6][10] = 1;
		a[10][6] = 1;
	}

	if (p712 < D) {
		a[6][11] = 1;
		a[11][6] = 1;
	}

	if (p713 < D) {
		a[6][12] = 1;
		a[12][6] = 1;
	}

	if (p714 < D) {
		a[6][13] = 1;
		a[13][6] = 1;
	}

	if (p715 < D) {
		a[6][14] = 1;
		a[14][6] = 1;
	}

	//

	if (p89 < D) {
		a[7][8] = 1;
		a[8][7] = 1;
	}

	if (p810 < D) {
		a[7][9] = 1;
		a[9][7] = 1;
	}

	if (p811 < D) {
		a[7][10] = 1;
		a[10][7] = 1;
	}

	if (p812 < D) {
		a[7][11] = 1;
		a[11][7] = 1;
	}

	if (p813 < D) {
		a[7][12] = 1;
		a[12][7] = 1;
	}

	if (p814 < D) {
		a[7][13] = 1;
		a[13][7] = 1;
	}

	if (p815 < D) {
		a[7][14] = 1;
		a[14][7] = 1;
	}

	//

	if (p89 < D) {
		a[8][9] = 1;
		a[9][8] = 1;
	}

	if (p911 < D) {
		a[8][10] = 1;
		a[10][8] = 1;
	}

	if (p912 < D) {
		a[8][11] = 1;
		a[11][8] = 1;
	}

	if (p913 < D) {
		a[8][12] = 1;
		a[12][8] = 1;
	}

	if (p914 < D) {
		a[8][13] = 1;
		a[13][8] = 1;
	}

	if (p915 < D) {
		a[8][14] = 1;
		a[14][8] = 1;
	}

	//

	if (p1011 < D) {
		a[9][10] = 1;
		a[10][9] = 1;
	}

	if (p1012 < D) {
		a[9][11] = 1;
		a[11][9] = 1;
	}

	if (p1013 < D) {
		a[9][12] = 1;
		a[12][9] = 1;
	}

	if (p1014 < D) {
		a[9][13] = 1;
		a[13][9] = 1;
	}

	if (p1015 < D) {
		a[9][14] = 1;
		a[14][9] = 1;
	}

	//

	if (p1112 < D) {
		a[10][11] = 1;
		a[11][10] = 1;
	}

	if (p1113 < D) {
		a[10][12] = 1;
		a[12][10] = 1;
	}

	if (p1114 < D) {
		a[10][13] = 1;
		a[13][10] = 1;
	}

	if (p1115 < D) {
		a[10][14] = 1;
		a[14][10] = 1;
	}

	//

	if (p1213 < D) {
		a[11][12] = 1;
		a[12][11] = 1;
	}

	if (p1214 < D) {
		a[11][13] = 1;
		a[13][11] = 1;
	}

	if (p1215 < D) {
		a[11][14] = 1;
		a[14][11] = 1;
	}

	//

	if (p1314 < D) {
		a[12][13] = 1;
	    a[13][12] = 1;
	}

	if (p1315 < D) {
		a[12][14] = 1;
		a[14][12] = 1;
	}

	//

	if (p1415 < D) {
		a[13][14] = 1;
		a[14][13] = 1;
	}

	//

	cout << "Матрица сети :" << endl;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << a[i][j] << " ";
		}
		cout << endl;
	}

	system("pause");
}